// Code generated by protoc-gen-go-orb. DO NOT EDIT.
//
// version:
// - protoc-gen-go-orb        v0.0.1
// - protoc                   v5.29.2
//
// source: auth_v1/auth.proto

package auth_v1

import (
	context "context"
	errors "errors"
	protojson "google.golang.org/protobuf/encoding/protojson"
	proto "google.golang.org/protobuf/proto"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	drpc "storj.io/drpc"
	drpcerr "storj.io/drpc/drpcerr"
)

type drpcEncoding_File_auth_v1_auth_proto struct{}

func (drpcEncoding_File_auth_v1_auth_proto) Marshal(msg drpc.Message) ([]byte, error) {
	return proto.Marshal(msg.(proto.Message))
}

func (drpcEncoding_File_auth_v1_auth_proto) MarshalAppend(buf []byte, msg drpc.Message) ([]byte, error) {
	return proto.MarshalOptions{}.MarshalAppend(buf, msg.(proto.Message))
}

func (drpcEncoding_File_auth_v1_auth_proto) Unmarshal(buf []byte, msg drpc.Message) error {
	return proto.Unmarshal(buf, msg.(proto.Message))
}

func (drpcEncoding_File_auth_v1_auth_proto) JSONMarshal(msg drpc.Message) ([]byte, error) {
	return protojson.Marshal(msg.(proto.Message))
}

func (drpcEncoding_File_auth_v1_auth_proto) JSONUnmarshal(buf []byte, msg drpc.Message) error {
	return protojson.Unmarshal(buf, msg.(proto.Message))
}

type DRPCAuthServer interface {
	Login(context.Context, *LoginRequest) (*LoginResponse, error)
	Introspect(context.Context, *emptypb.Empty) (*IntrospectResponse, error)
}

type DRPCAuthUnimplementedServer struct{}

func (s *DRPCAuthUnimplementedServer) Login(context.Context, *LoginRequest) (*LoginResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCAuthUnimplementedServer) Introspect(context.Context, *emptypb.Empty) (*IntrospectResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

type DRPCAuthDescription struct{}

func (DRPCAuthDescription) NumMethods() int { return 2 }

func (DRPCAuthDescription) Method(n int) (string, drpc.Encoding, drpc.Receiver, interface{}, bool) {
	switch n {
	case 0:
		return "/auth.v1.Auth/Login", drpcEncoding_File_auth_v1_auth_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCAuthServer).
					Login(
						ctx,
						in1.(*LoginRequest),
					)
			}, DRPCAuthServer.Login, true
	case 1:
		return "/auth.v1.Auth/Introspect", drpcEncoding_File_auth_v1_auth_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCAuthServer).
					Introspect(
						ctx,
						in1.(*emptypb.Empty),
					)
			}, DRPCAuthServer.Introspect, true
	default:
		return "", nil, nil, nil, false
	}
}

type DRPCAuth_LoginStream interface {
	drpc.Stream
	SendAndClose(*LoginResponse) error
}

type drpcAuth_LoginStream struct {
	drpc.Stream
}

func (x *drpcAuth_LoginStream) GetStream() drpc.Stream {
	return x.Stream
}

func (x *drpcAuth_LoginStream) SendAndClose(m *LoginResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_auth_v1_auth_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCAuth_IntrospectStream interface {
	drpc.Stream
	SendAndClose(*IntrospectResponse) error
}

type drpcAuth_IntrospectStream struct {
	drpc.Stream
}

func (x *drpcAuth_IntrospectStream) GetStream() drpc.Stream {
	return x.Stream
}

func (x *drpcAuth_IntrospectStream) SendAndClose(m *IntrospectResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_auth_v1_auth_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}
